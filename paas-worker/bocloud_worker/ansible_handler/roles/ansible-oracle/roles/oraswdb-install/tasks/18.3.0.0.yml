
- name: install-home-db | Extract files
  unarchive:
      src={{ oracle_stage }}/{{ item[0].filename }}
      dest={{ oracle_home_db }}
      copy=no
      creates="{{ oracle_home_db }}/{{ item[0].creates}}"
  with_nested:
    - "{{oracle_sw_image_db}}"
    - "{{db_homes_installed}}"
  become: yes
  become_user: "{{ oracle_user }}"
  run_once: "{{ configure_cluster}}"
  when: item[0].version == db_homes_config[item[1].home]['version'] and item[1].state|lower == 'present' and oracle_sw_copy and oracle_home_db not in existing_dbhome.stdout_lines
  tags:
    - oradbswunpack

- name: install-home-db | Extract files (from remote location)
  unarchive:
      src={{ oracle_stage_remote }}/{{ item[0].filename }}
      dest={{ oracle_home_db }}
      copy=no
      creates="{{ oracle_home_db }}/{{ item[0].creates}}"
  with_nested:
    - "{{oracle_sw_image_db}}"
    - "{{db_homes_installed}}"
  become: yes
  become_user: "{{ oracle_user }}"
  run_once: "{{ configure_cluster}}"
  when: item[0].version == db_homes_config[item[1].home]['version'] and item[1].state|lower == 'present'  and not oracle_sw_copy and oracle_home_db not in existing_dbhome.stdout_lines
  tags:
    - oradbswunpack

- name: install-home-db | Install Oracle Database Server
  shell: "{{ oracle_home_db }}/runInstaller -responseFile {{ oracle_rsp_stage }}/{{ oracle_db_responsefile }} -ignorePrereq -silent -waitforcompletion"
  become: yes
  become_user: "{{ oracle_user }}"
  run_once: "{{ configure_cluster}}"
  when: oracle_home_db not in existing_dbhome.stdout_lines
  tags:
    - oradbinstall
  register: oradbinstall
  failed_when: oradbinstall.rc not in [0,6]

- debug: var=oradbinstall.stdout_lines
  run_once: "{{ configure_cluster}}"
  when: oracle_home_db not in existing_dbhome.stdout_lines and oradbinstall.changed
  tags:
   - oradbinstall
  ignore_errors: true

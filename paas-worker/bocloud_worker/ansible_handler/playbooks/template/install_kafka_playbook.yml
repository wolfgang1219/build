---

- name: prepare installation
  hosts: {{ ip_list }}
  vars:
    yum_baseurl: "{{ bocloud_ansible.packages_yum_baseurl }}"
    backup_repo: True
    restory_repo: False
  roles:
    - role: bocloud_common

- hosts: {{ ip_list }}
  vars:
    java_version: 8
    java_subversion: 161
    packages_dir: "{{ bocloud_ansible.packages_path }}"
    java_download_from_oracle: False
    java_set_javahome: True
    java_depended: True
  roles:
    - role: ansible-oracle-java

{% if args.zookeeper is defined %}
- hosts: zookeeper
  vars:
    zookeeper_version: {{ args.zookeeper.version }}
    zookeeper_tarball: {{ bocloud_ansible.packages_path }}/zookeeper/zookeeper-{{ args.zookeeper.version }}.tar.gz
    {%- if args.zookeeper.software_config is defined %}
    zookeeper_cluster_ports: "{{ args.software_config.switch_port|default('2888') }}:{{ args.software_config.choice_port|default('3888') }}"
    {%- endif %}
    {%- if args.software_config is defined %}
    {%- for key, value in args.software_config.iteritems() %}
    {{ key }}: "{{ value }}"
    {%- endfor %}
    {%- endif %}

  roles:
    - role: ansible-zookeeper
      {%- if args.zookeeper.cluster_install %}
      zookeeper_hosts:
      {%- for ip in args.zookeeper.hosts %}
        - host: {{ ip }}
          id: {{ loop.index }}
      {%- endfor %}
      {%- endif %}
{%- endif %}

- hosts: kafka
  vars:
    kafka_version: {{ args.version }}
    kafka_hosts: "{{ '{{ groups.kafka | list }}' }}"
    {%- if args.software_config.port is defined %}
    kafka_port: {{ args.software_config.port }}
    {%- endif %}
    {%- if args.software_config.data_dir is defined %}
    kafka_data_dir: {{ args.software_config.data_dir }}
    {%- endif %}
    {%- if args.software_config.log_dir is defined %}
    kafka_log_dir: {{ args.software_config.log_dir }}
    {%- endif %}
    packages_dir: {{ bocloud_ansible.packages_path }}
    {%- for key, value in args.manage_config.iteritems() %}
    {{ key }}: {{ value }}
    {%- endfor %}
  roles:
    - role: ansible-kafka

- name: restory original environment
  hosts: {{ ip_list }}
  vars:
    backup_repo: False
    restory_repo: True
    configure_bocloud_repo: False
  roles:
    - role: bocloud_common